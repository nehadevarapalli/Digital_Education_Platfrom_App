/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Course;
import model.userProfiles.Professor;
import model.userProfiles.Student;
import utils.Manager;

/**
 *
 * @author ashishnevan
 */
public class StudentReviewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentReviewJPanel
     */
    Student s;
    Manager m;

    public StudentReviewJPanel(Student s, Manager m) {
        initComponents();
        this.s = s;
        this.m = m;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblProfnCourse.getModel();
        model.setRowCount(0);
        ArrayList<Professor> professors = m.getProfessors().getProfessors();

        for (Professor p : professors) {
            for (Course c : p.getCourseOfferings()) {
                if (s.getTranscript().keySet().contains(c)) {
                    model.addRow(new Object[]{
                        p,
                        c.getCode() + " : " + c.getName(),
                        String.valueOf(p.getRating())});
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfnCourse = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNewRating = new javax.swing.JTextField();
        btnRate = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));

        tblProfnCourse.setBackground(new java.awt.Color(255, 255, 255));
        tblProfnCourse.setForeground(new java.awt.Color(0, 0, 0));
        tblProfnCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Professor", "Course", "Avg. Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProfnCourse);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Rate out of 5");

        txtNewRating.setBackground(new java.awt.Color(255, 255, 255));
        txtNewRating.setForeground(new java.awt.Color(0, 0, 0));

        btnRate.setBackground(new java.awt.Color(255, 255, 255));
        btnRate.setForeground(new java.awt.Color(0, 0, 0));
        btnRate.setText("Rate");
        btnRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNewRating, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRate)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNewRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRate))
                .addContainerGap(154, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateActionPerformed
        // TODO add your handling code here:
        int newRating;
        if (!txtNewRating.getText().isBlank()) {
            try {
                newRating = Integer.parseInt(txtNewRating.getText());
                int selectedRowIndex = tblProfnCourse.getSelectedRow();

                if (newRating > 5 || newRating < 1) {
                    throw new NumberFormatException();
                }
                if (selectedRowIndex < 0) {
                    JOptionPane.showMessageDialog(this, "Please select a row");
                    return;
                }
                DefaultTableModel model = (DefaultTableModel) tblProfnCourse.getModel();
                Professor selectedProfessor = (Professor) model.getValueAt(selectedRowIndex, 0);
                selectedProfessor.addRating(newRating);
                JOptionPane.showMessageDialog(this, "Rating added successfully!");
                populateTable();
            } catch (NumberFormatException err) {
                JOptionPane.showMessageDialog(this, "Enter a valid number from 1 to 5", "Rating Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter a valid number from 1 to 5", "Rating Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnRateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProfnCourse;
    private javax.swing.JTextField txtNewRating;
    // End of variables declaration//GEN-END:variables
}
